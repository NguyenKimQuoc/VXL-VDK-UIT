
clock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002b6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000032a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800060  00800060  0000032a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000032a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000035c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000398  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000088c  00000000  00000000  000003c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000065e  00000000  00000000  00000c54  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000370  00000000  00000000  000012b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000088  00000000  00000000  00001624  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003bc  00000000  00000000  000016ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004fb  00000000  00000000  00001a68  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001f63  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__vector_9>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a8 36       	cpi	r26, 0x68	; 104
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 c9 00 	call	0x192	; 0x192 <main>
  74:	0c 94 59 01 	jmp	0x2b2	; 0x2b2 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <__vector_9>:
		}
		Display(gio,phut,giay);
    }
}
ISR(TIMER0_OVF_vect)
{
  7c:	1f 92       	push	r1
  7e:	0f 92       	push	r0
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	0f 92       	push	r0
  84:	11 24       	eor	r1, r1
  86:	2f 93       	push	r18
  88:	3f 93       	push	r19
  8a:	4f 93       	push	r20
  8c:	5f 93       	push	r21
  8e:	6f 93       	push	r22
  90:	7f 93       	push	r23
  92:	8f 93       	push	r24
  94:	9f 93       	push	r25
  96:	af 93       	push	r26
	TCNT0=130;
  98:	82 e8       	ldi	r24, 0x82	; 130
  9a:	82 bf       	out	0x32, r24	; 50
	count=count+1;
  9c:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  a0:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  a4:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
  a8:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
  ac:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
  b0:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
  b4:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
  b8:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
  bc:	a1 e0       	ldi	r26, 0x01	; 1
  be:	0e 94 39 01 	call	0x272	; 0x272 <__adddi3_s8>
  c2:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
  c6:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  ca:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
  ce:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
  d2:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
  d6:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
  da:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
  de:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
}
  e2:	af 91       	pop	r26
  e4:	9f 91       	pop	r25
  e6:	8f 91       	pop	r24
  e8:	7f 91       	pop	r23
  ea:	6f 91       	pop	r22
  ec:	5f 91       	pop	r21
  ee:	4f 91       	pop	r20
  f0:	3f 91       	pop	r19
  f2:	2f 91       	pop	r18
  f4:	0f 90       	pop	r0
  f6:	0f be       	out	0x3f, r0	; 63
  f8:	0f 90       	pop	r0
  fa:	1f 90       	pop	r1
  fc:	18 95       	reti

000000fe <_Z7Displayiii>:
void Display(int hour,int minute,int second){
  fe:	cf 93       	push	r28
 100:	df 93       	push	r29
 102:	eb 01       	movw	r28, r22
 104:	fa 01       	movw	r30, r20
	int hour2=hour%10;
	int minute1=minute/10;
	int minute2=minute%10;
	int second1=second/10;
	int second2=second%10;
	PORTD=0b00000001;
 106:	21 e0       	ldi	r18, 0x01	; 1
 108:	22 bb       	out	0x12, r18	; 18
	PORTC=hour1;
 10a:	2a e0       	ldi	r18, 0x0A	; 10
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	b9 01       	movw	r22, r18
 110:	0e 94 25 01 	call	0x24a	; 0x24a <__divmodhi4>
 114:	65 bb       	out	0x15, r22	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 116:	af ec       	ldi	r26, 0xCF	; 207
 118:	b7 e0       	ldi	r27, 0x07	; 7
 11a:	11 97       	sbiw	r26, 0x01	; 1
 11c:	f1 f7       	brne	.-4      	; 0x11a <_Z7Displayiii+0x1c>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <_Z7Displayiii+0x22>
 120:	00 00       	nop
	_delay_ms(1);
	PORTD=0b00000010;
 122:	92 e0       	ldi	r25, 0x02	; 2
 124:	92 bb       	out	0x12, r25	; 18
	PORTC=hour2;
 126:	85 bb       	out	0x15, r24	; 21
 128:	8f ec       	ldi	r24, 0xCF	; 207
 12a:	97 e0       	ldi	r25, 0x07	; 7
 12c:	01 97       	sbiw	r24, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <_Z7Displayiii+0x2e>
 130:	00 c0       	rjmp	.+0      	; 0x132 <_Z7Displayiii+0x34>
 132:	00 00       	nop
	_delay_ms(1);
	PORTD=0b00000100;
 134:	84 e0       	ldi	r24, 0x04	; 4
 136:	82 bb       	out	0x12, r24	; 18
	PORTC=minute1;
 138:	ce 01       	movw	r24, r28
 13a:	b9 01       	movw	r22, r18
 13c:	0e 94 25 01 	call	0x24a	; 0x24a <__divmodhi4>
 140:	65 bb       	out	0x15, r22	; 21
 142:	af ec       	ldi	r26, 0xCF	; 207
 144:	b7 e0       	ldi	r27, 0x07	; 7
 146:	11 97       	sbiw	r26, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <_Z7Displayiii+0x48>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <_Z7Displayiii+0x4e>
 14c:	00 00       	nop
	_delay_ms(1);
	PORTD=0b00001000;
 14e:	98 e0       	ldi	r25, 0x08	; 8
 150:	92 bb       	out	0x12, r25	; 18
	PORTC=minute2;
 152:	85 bb       	out	0x15, r24	; 21
 154:	8f ec       	ldi	r24, 0xCF	; 207
 156:	97 e0       	ldi	r25, 0x07	; 7
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <_Z7Displayiii+0x5a>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <_Z7Displayiii+0x60>
 15e:	00 00       	nop
	_delay_ms(1);
	PORTD=0b00010000;
 160:	80 e1       	ldi	r24, 0x10	; 16
 162:	82 bb       	out	0x12, r24	; 18
	PORTC=second1;
 164:	cf 01       	movw	r24, r30
 166:	b9 01       	movw	r22, r18
 168:	0e 94 25 01 	call	0x24a	; 0x24a <__divmodhi4>
 16c:	65 bb       	out	0x15, r22	; 21
 16e:	af ec       	ldi	r26, 0xCF	; 207
 170:	b7 e0       	ldi	r27, 0x07	; 7
 172:	11 97       	sbiw	r26, 0x01	; 1
 174:	f1 f7       	brne	.-4      	; 0x172 <_Z7Displayiii+0x74>
 176:	00 c0       	rjmp	.+0      	; 0x178 <_Z7Displayiii+0x7a>
 178:	00 00       	nop
	_delay_ms(1);
	PORTD=0b00100000;
 17a:	90 e2       	ldi	r25, 0x20	; 32
 17c:	92 bb       	out	0x12, r25	; 18
	PORTC=second2;
 17e:	85 bb       	out	0x15, r24	; 21
 180:	ef ec       	ldi	r30, 0xCF	; 207
 182:	f7 e0       	ldi	r31, 0x07	; 7
 184:	31 97       	sbiw	r30, 0x01	; 1
 186:	f1 f7       	brne	.-4      	; 0x184 <_Z7Displayiii+0x86>
 188:	00 c0       	rjmp	.+0      	; 0x18a <_Z7Displayiii+0x8c>
 18a:	00 00       	nop
	_delay_ms(1);
	
}
 18c:	df 91       	pop	r29
 18e:	cf 91       	pop	r28
 190:	08 95       	ret

00000192 <main>:
int main(void){
    /* Replace with your application code */
	int gio=19;
	int phut=50;
	int giay=40;
	DDRC=0xff;
 192:	8f ef       	ldi	r24, 0xFF	; 255
 194:	84 bb       	out	0x14, r24	; 20
	DDRD=0xff;
 196:	81 bb       	out	0x11, r24	; 17
	PORTC=0x00;
 198:	15 ba       	out	0x15, r1	; 21
	PORTD=0x00;
 19a:	12 ba       	out	0x12, r1	; 18
	TCCR0=(1<<CS01)|(1<<CS00);
 19c:	83 e0       	ldi	r24, 0x03	; 3
 19e:	83 bf       	out	0x33, r24	; 51
	TCNT0=130;
 1a0:	82 e8       	ldi	r24, 0x82	; 130
 1a2:	82 bf       	out	0x32, r24	; 50
	TIMSK|=(1<<TOIE0);
 1a4:	89 b7       	in	r24, 0x39	; 57
 1a6:	81 60       	ori	r24, 0x01	; 1
 1a8:	89 bf       	out	0x39, r24	; 57
	sei();
 1aa:	78 94       	sei

int main(void){
    /* Replace with your application code */
	int gio=19;
	int phut=50;
	int giay=40;
 1ac:	c8 e2       	ldi	r28, 0x28	; 40
 1ae:	d0 e0       	ldi	r29, 0x00	; 0
volatile long long int count=0;

int main(void){
    /* Replace with your application code */
	int gio=19;
	int phut=50;
 1b0:	0f 2e       	mov	r0, r31
 1b2:	f2 e3       	ldi	r31, 0x32	; 50
 1b4:	ef 2e       	mov	r14, r31
 1b6:	f1 2c       	mov	r15, r1
 1b8:	f0 2d       	mov	r31, r0
void Display(int hour,int minute,int second);
volatile long long int count=0;

int main(void){
    /* Replace with your application code */
	int gio=19;
 1ba:	03 e1       	ldi	r16, 0x13	; 19
 1bc:	10 e0       	ldi	r17, 0x00	; 0
	TCCR0=(1<<CS01)|(1<<CS00);
	TCNT0=130;
	TIMSK|=(1<<TOIE0);
	sei();
    while (1) {
		if(count>=1000){
 1be:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 1c2:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1c6:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 1ca:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 1ce:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 1d2:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 1d6:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 1da:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
 1de:	27 3e       	cpi	r18, 0xE7	; 231
 1e0:	33 40       	sbci	r19, 0x03	; 3
 1e2:	41 05       	cpc	r20, r1
 1e4:	51 05       	cpc	r21, r1
 1e6:	61 05       	cpc	r22, r1
 1e8:	71 05       	cpc	r23, r1
 1ea:	81 05       	cpc	r24, r1
 1ec:	91 05       	cpc	r25, r1
 1ee:	91 f0       	breq	.+36     	; 0x214 <main+0x82>
 1f0:	8c f0       	brlt	.+34     	; 0x214 <main+0x82>
			giay=giay+1;
 1f2:	21 96       	adiw	r28, 0x01	; 1
			count=0;
 1f4:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 1f8:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1fc:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 200:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 204:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 208:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 20c:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
 210:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
		}
		if(giay==60){
 214:	cc 33       	cpi	r28, 0x3C	; 60
 216:	d1 05       	cpc	r29, r1
 218:	29 f4       	brne	.+10     	; 0x224 <main+0x92>
			phut=phut+1;
 21a:	8f ef       	ldi	r24, 0xFF	; 255
 21c:	e8 1a       	sub	r14, r24
 21e:	f8 0a       	sbc	r15, r24
			giay=0;
 220:	c0 e0       	ldi	r28, 0x00	; 0
 222:	d0 e0       	ldi	r29, 0x00	; 0
		}
		if(phut==60){
 224:	ec e3       	ldi	r30, 0x3C	; 60
 226:	ee 16       	cp	r14, r30
 228:	f1 04       	cpc	r15, r1
 22a:	21 f4       	brne	.+8      	; 0x234 <main+0xa2>
			gio=gio+1;
 22c:	0f 5f       	subi	r16, 0xFF	; 255
 22e:	1f 4f       	sbci	r17, 0xFF	; 255
			phut=0;
 230:	e1 2c       	mov	r14, r1
 232:	f1 2c       	mov	r15, r1
		}
		if(gio==24){
 234:	08 31       	cpi	r16, 0x18	; 24
 236:	11 05       	cpc	r17, r1
 238:	11 f4       	brne	.+4      	; 0x23e <main+0xac>
			gio=0;
 23a:	00 e0       	ldi	r16, 0x00	; 0
 23c:	10 e0       	ldi	r17, 0x00	; 0
		}
		Display(gio,phut,giay);
 23e:	ae 01       	movw	r20, r28
 240:	b7 01       	movw	r22, r14
 242:	c8 01       	movw	r24, r16
 244:	0e 94 7f 00 	call	0xfe	; 0xfe <_Z7Displayiii>
	PORTD=0x00;
	TCCR0=(1<<CS01)|(1<<CS00);
	TCNT0=130;
	TIMSK|=(1<<TOIE0);
	sei();
    while (1) {
 248:	ba cf       	rjmp	.-140    	; 0x1be <main+0x2c>

0000024a <__divmodhi4>:
 24a:	97 fb       	bst	r25, 7
 24c:	07 2e       	mov	r0, r23
 24e:	16 f4       	brtc	.+4      	; 0x254 <__divmodhi4+0xa>
 250:	00 94       	com	r0
 252:	07 d0       	rcall	.+14     	; 0x262 <__divmodhi4_neg1>
 254:	77 fd       	sbrc	r23, 7
 256:	09 d0       	rcall	.+18     	; 0x26a <__divmodhi4_neg2>
 258:	0e 94 45 01 	call	0x28a	; 0x28a <__udivmodhi4>
 25c:	07 fc       	sbrc	r0, 7
 25e:	05 d0       	rcall	.+10     	; 0x26a <__divmodhi4_neg2>
 260:	3e f4       	brtc	.+14     	; 0x270 <__divmodhi4_exit>

00000262 <__divmodhi4_neg1>:
 262:	90 95       	com	r25
 264:	81 95       	neg	r24
 266:	9f 4f       	sbci	r25, 0xFF	; 255
 268:	08 95       	ret

0000026a <__divmodhi4_neg2>:
 26a:	70 95       	com	r23
 26c:	61 95       	neg	r22
 26e:	7f 4f       	sbci	r23, 0xFF	; 255

00000270 <__divmodhi4_exit>:
 270:	08 95       	ret

00000272 <__adddi3_s8>:
 272:	00 24       	eor	r0, r0
 274:	a7 fd       	sbrc	r26, 7
 276:	00 94       	com	r0
 278:	2a 0f       	add	r18, r26
 27a:	30 1d       	adc	r19, r0
 27c:	40 1d       	adc	r20, r0
 27e:	50 1d       	adc	r21, r0
 280:	60 1d       	adc	r22, r0
 282:	70 1d       	adc	r23, r0
 284:	80 1d       	adc	r24, r0
 286:	90 1d       	adc	r25, r0
 288:	08 95       	ret

0000028a <__udivmodhi4>:
 28a:	aa 1b       	sub	r26, r26
 28c:	bb 1b       	sub	r27, r27
 28e:	51 e1       	ldi	r21, 0x11	; 17
 290:	07 c0       	rjmp	.+14     	; 0x2a0 <__udivmodhi4_ep>

00000292 <__udivmodhi4_loop>:
 292:	aa 1f       	adc	r26, r26
 294:	bb 1f       	adc	r27, r27
 296:	a6 17       	cp	r26, r22
 298:	b7 07       	cpc	r27, r23
 29a:	10 f0       	brcs	.+4      	; 0x2a0 <__udivmodhi4_ep>
 29c:	a6 1b       	sub	r26, r22
 29e:	b7 0b       	sbc	r27, r23

000002a0 <__udivmodhi4_ep>:
 2a0:	88 1f       	adc	r24, r24
 2a2:	99 1f       	adc	r25, r25
 2a4:	5a 95       	dec	r21
 2a6:	a9 f7       	brne	.-22     	; 0x292 <__udivmodhi4_loop>
 2a8:	80 95       	com	r24
 2aa:	90 95       	com	r25
 2ac:	bc 01       	movw	r22, r24
 2ae:	cd 01       	movw	r24, r26
 2b0:	08 95       	ret

000002b2 <_exit>:
 2b2:	f8 94       	cli

000002b4 <__stop_program>:
 2b4:	ff cf       	rjmp	.-2      	; 0x2b4 <__stop_program>
